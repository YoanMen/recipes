{
  "manifests": {
    "modulux/core-bundle": {
      "manifest": {
        "bundles": {
          "Modulux\\CoreBundle\\ModuluxCoreBundle": ["all"]
        },
        "add-lines": [
          {
            "file": "config/routes.yaml",
            "content": "modulux_core_bundle.routes:\n    resource: '@ModuluxCoreBundle/config/routes.yaml'",
            "position": "top"
          },
          {
            "file": "webpack.config.js",
            "content": "const FosRouting = require('fos-router/webpack/FosRouting');",
            "position": "top"
          },
          {
            "file": "webpack.config.js",
            "content": "    .addPlugin(new FosRouting())",
            "position": "after_target", 
            "target": ".addEntry('app', './assets/app.js')"
          },
          {
            "file": "webpack.config.js",
            "content": "    .addEntry('core', './vendor/modulux/core-bundle/assets/js/app.js')",
            "position": "after_target",
            "target": ".addEntry('app', './assets/app.js')"
          },
          {
            "file": "config/packages/security.yaml",
            "content": "        modulux_provider:\n            entity:\n                class: Modulux\\CoreBundle\\Entity\\User\n                property: username",
            "position": "after_target",
            "target": "providers:"
          },
          {
            "file": "config/packages/security.yaml",
            "content": "        modulux:\n            lazy: true\n            provider: modulux_provider\n            form_login:\n                login_path: modulux_security_login\n                check_path: modulux_security_login\n                enable_csrf: true\n            logout:\n                path: modulux_security_logout",
            "position": "after_target",
            "target": "firewalls:"
          },
          {
            "file": "config/packages/security.yaml",
            "content": "        - { path: ^/modulux/login, roles: PUBLIC_ACCESS }\n        - { path: ^/modulux, roles: ROLE_MODULUX }",
            "position": "after_target",
            "target": "access_control:"
          }
        ],
        "composer-scripts": {
          "npm install gridjs": "script",
          "npm install toastify-js": "script",
          "assets:install --symlink public": "symfony-cmd",
          "npm install ./vendor/friendsofsymfony/jsrouting-bundle/Resources/": "script",
          "doctrine:database:create --if-not-exists": "symfony-cmd",
          "doctrine:schema:update --force": "symfony-cmd",
          "modulux:core:permissions": "symfony-cmd"
        },
        "post-install-output": [
          "<bg=blue;fg=white>              </>",
          "<bg=blue;fg=white> What's next? </>",
          "<bg=blue;fg=white>              </>",
          "",
          "  * <fg=blue>Create</> your development user:",
          "    Execute the following command to create a development user:",
          "    <comment>php bin/console modulux:create:modulux PASSWORD</comment>",
          "    Replace <comment>PASSWORD</comment> with the desired password, login is modulux."
        ]
      },
      "ref": "aebd03ff6a190b14741c73e875550eade11e1f24"
    }
  }
}
